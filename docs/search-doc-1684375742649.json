[{"title":"Attributes","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Attributes","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Attributes","url":"/ultimate-build-docs/api/Attributes#properties","content":" "},{"title":"Store​","type":1,"pageTitle":"Attributes","url":"/ultimate-build-docs/api/Attributes#Store","content":"&lt;/&gt; Attributes.Store: Store This is to manage state for attributes  "},{"title":"Middleware​","type":1,"pageTitle":"Attributes","url":"/ultimate-build-docs/api/Attributes#Middleware","content":"&lt;/&gt; Attributes.Middleware: Middleware This is to manage state for attributes "},{"title":"ClickDetector","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/ClickDetector","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ClickDetector","url":"/ultimate-build-docs/api/ClickDetector#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ClickDetector","url":"/ultimate-build-docs/api/ClickDetector#new","content":"&lt;/&gt; ClickDetector.new( part: Basepart-- The part ) → ClickDetector-- Returns a new ClickDetector object Initalizes a new clickdetector within the part you pass in.  "},{"title":"setDistance​","type":1,"pageTitle":"ClickDetector","url":"/ultimate-build-docs/api/ClickDetector#setDistance","content":"&lt;/&gt; ClickDetector:setDistance( distance: number-- The distance ) → () Sets the distance a player needs to be in order for the MouseClicked event to fire. "},{"title":"Middleware","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Middleware","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Middleware","url":"/ultimate-build-docs/api/Middleware#properties","content":" "},{"title":"LoggerMiddleware​","type":1,"pageTitle":"Middleware","url":"/ultimate-build-docs/api/Middleware#LoggerMiddleware","content":"&lt;/&gt; Middleware.LoggerMiddleware: Middleware This is to log dispatches out to console "},{"title":"PlayerMetadata","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/PlayerMetadata","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"PlayerMetadata","url":"/ultimate-build-docs/api/PlayerMetadata#types","content":" "},{"title":"PlayerMetadata​","type":1,"pageTitle":"PlayerMetadata","url":"/ultimate-build-docs/api/PlayerMetadata#PlayerMetadata","content":"&lt;/&gt; type PlayerMetadata = {[string]: any} Player's metadata "},{"title":"Functions​","type":1,"pageTitle":"PlayerMetadata","url":"/ultimate-build-docs/api/PlayerMetadata#functions","content":" "},{"title":"getMetadataFromName​","type":1,"pageTitle":"PlayerMetadata","url":"/ultimate-build-docs/api/PlayerMetadata#getMetadataFromName","content":"&lt;/&gt; PlayerMetadata:getMetadataFromName(name: string) → PlayerMetadata Gets metadata from player's username.  "},{"title":"getMetadataFromPlayer​","type":1,"pageTitle":"PlayerMetadata","url":"/ultimate-build-docs/api/PlayerMetadata#getMetadataFromPlayer","content":"&lt;/&gt; PlayerMetadata:getMetadataFromPlayer(player: Player ) → PlayerMetadata Gets metadata from player object.  "},{"title":"getMetadataFromCharacter​","type":1,"pageTitle":"PlayerMetadata","url":"/ultimate-build-docs/api/PlayerMetadata#getMetadataFromCharacter","content":"&lt;/&gt; PlayerMetadata:getMetadataFromCharacter(character: Model ) → PlayerMetadata Gets metadata from player's character model.  "},{"title":"getMetadataFromUserId​","type":1,"pageTitle":"PlayerMetadata","url":"/ultimate-build-docs/api/PlayerMetadata#getMetadataFromUserId","content":"&lt;/&gt; PlayerMetadata:getMetadataFromUserId(userid: number) → PlayerMetadata Gets metadata from player's userid. "},{"title":"Ranks","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Ranks","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Ranks","url":"/ultimate-build-docs/api/Ranks#properties","content":" "},{"title":"TrialAdmin​","type":1,"pageTitle":"Ranks","url":"/ultimate-build-docs/api/Ranks#TrialAdmin","content":"&lt;/&gt; Ranks.TrialAdmin: number Trial Admin  "},{"title":"Admin​","type":1,"pageTitle":"Ranks","url":"/ultimate-build-docs/api/Ranks#Admin","content":"&lt;/&gt; Ranks.Admin: number Admin  "},{"title":"Designer​","type":1,"pageTitle":"Ranks","url":"/ultimate-build-docs/api/Ranks#Designer","content":"&lt;/&gt; Ranks.Designer: number Designer  "},{"title":"Developer​","type":1,"pageTitle":"Ranks","url":"/ultimate-build-docs/api/Ranks#Developer","content":"&lt;/&gt; Ranks.Developer: number Developer  "},{"title":"LeadDeveloper​","type":1,"pageTitle":"Ranks","url":"/ultimate-build-docs/api/Ranks#LeadDeveloper","content":"&lt;/&gt; Ranks.LeadDeveloper: number Lead Developer  "},{"title":"Owner​","type":1,"pageTitle":"Ranks","url":"/ultimate-build-docs/api/Ranks#Owner","content":"&lt;/&gt; Ranks.Owner: number Owner  "},{"title":"Holder​","type":1,"pageTitle":"Ranks","url":"/ultimate-build-docs/api/Ranks#Holder","content":"&lt;/&gt; Ranks.Holder: number Holder "},{"title":"Markdown","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Markdown","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#types","content":" "},{"title":"Section​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#Section","content":"&lt;/&gt; type Section = { type:string, name:string, subsections: {}, page: {}, numbered:string } Section in the sidebar panel  "},{"title":"Bullets​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#Bullets","content":"Enum &lt;/&gt; type Bullets = { Number=1, Dot=2 } Bullet types for list.  "},{"title":"Items​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#Items","content":"&lt;/&gt; type Items = {string} List of strings you want to bullet point. "},{"title":"Functions​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#functions","content":" "},{"title":"Section​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#Section","content":"Sidebar &lt;/&gt; Markdown.Section(args: Section) → Section Creates a section  "},{"title":"Title​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#Title","content":"Page &lt;/&gt; Markdown.Title(text: string) → () Creates a Title  "},{"title":"Subtitle​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#Subtitle","content":"Page &lt;/&gt; Markdown.Subtitle(text: string) → () Creates a subtitle  "},{"title":"Text​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#Text","content":"Page &lt;/&gt; Markdown.Text(text: string) → () Creates Text  "},{"title":"List​","type":1,"pageTitle":"Markdown","url":"/ultimate-build-docs/api/Markdown#List","content":"Page &lt;/&gt; Markdown.List( bullet: Bullets, items: Items ) → () Creates a list. "},{"title":"Identifiers","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Identifiers","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Identifiers","url":"/ultimate-build-docs/api/Identifiers#types","content":" "},{"title":"PackedString​","type":1,"pageTitle":"Identifiers","url":"/ultimate-build-docs/api/Identifiers#PackedString","content":"&lt;/&gt; type PackedString = string Represents a packed string  "},{"title":"UnpackedString​","type":1,"pageTitle":"Identifiers","url":"/ultimate-build-docs/api/Identifiers#UnpackedString","content":"&lt;/&gt; type UnpackedString = string Represents a unpacked string "},{"title":"Functions​","type":1,"pageTitle":"Identifiers","url":"/ultimate-build-docs/api/Identifiers#functions","content":" "},{"title":"createIdentifer​","type":1,"pageTitle":"Identifiers","url":"/ultimate-build-docs/api/Identifiers#createIdentifer","content":"This item only works when running on the client. Client This item only works when running on the server. Server &lt;/&gt; Identifiers.createIdentifer(id: string) → PackedString | Promise Creates an identifier from the string you passed in. note This function will return a promise on the client. This promise will resolve when the identifier has been created on the server.  "},{"title":"fromIdentifier​","type":1,"pageTitle":"Identifiers","url":"/ultimate-build-docs/api/Identifiers#fromIdentifier","content":"This item only works when running on the client. Client This item only works when running on the server. Server &lt;/&gt; Identifiers.fromIdentifier(packed: string) → UnpackedString | nil | Promise  note This function will return a promise on the client. This promise will resolve when the identifier has been created on the server. Returns the original string you passed in. "},{"title":"Components","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Components","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#types","content":" "},{"title":"Component​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#Component","content":"&lt;/&gt; type Component = {[string]:any} React component  "},{"title":"Theme​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#Theme","content":"&lt;/&gt; type Theme = {[string]:any} Theming table, see default theme in src/ReplicatedStorage/Themes/Default.lua for a template to follow. "},{"title":"Properties​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#properties","content":" "},{"title":"Context​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#Context","content":"&lt;/&gt; Components.Context: Context React context for current theme.  "},{"title":"Changed​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#Changed","content":"Event &lt;/&gt; Components.Changed: Signal Fires when the theme gets updated  "},{"title":"Theme​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#Theme","content":"&lt;/&gt; Components.Theme: Component Theme component controller "},{"title":"Functions​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#functions","content":" "},{"title":"GetComponent​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#GetComponent","content":"&lt;/&gt; Components:GetComponent(Name: string) → Component Gets a themed version of a roblox base component such as a textbutton, frame, imagebutton.  "},{"title":"GetController​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#GetController","content":"&lt;/&gt; Components:GetController(Name: string) → Component Returns a controller object. Anything that the player interacts with such as sliders, dropdowns, radios.  "},{"title":"GetBase​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#GetBase","content":"&lt;/&gt; Components:GetBase(Name: string) → Component Gets a base component. This includes things such as Window, Document  "},{"title":"GetPadding​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#GetPadding","content":"&lt;/&gt; Components:GetPadding(Name: string) → Component Gets a padding component. This includes things such as Box, Text  "},{"title":"GetMain​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#GetMain","content":"&lt;/&gt; Components:GetMain(Name: string) → Component Gets a main component. This is a convienent way of getting your UI that you built.  "},{"title":"SetTheme​","type":1,"pageTitle":"Components","url":"/ultimate-build-docs/api/Components#SetTheme","content":"&lt;/&gt; Components:SetTheme(theme: Theme) → nil Sets the UI theme. See default theme in src/ReplicatedStorage/Themes/Default.lua for a template to follow. "},{"title":"Deserialize","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Deserialize","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#types","content":" "},{"title":"Color​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#Color","content":"&lt;/&gt; type Color = string Binary string composed of 3 bytes.  "},{"title":"Vector​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#Vector","content":"&lt;/&gt; type Vector = Vector3int16 | Vector3  Vector3 or a Vector3int16  "},{"title":"Serialize","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Serialize","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize#functions","content":" "},{"title":"number​","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize#number","content":"&lt;/&gt; Serialize.number(n: number) → Number "},{"title":"Types","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize##","content":""},{"title":"​","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize#Number","content":"type Number = string | number  Serializes a number.  "},{"title":"color3​","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize#color3","content":"&lt;/&gt; Serialize.color3(x: Color3 ) → string Serializes a Color3 into binary string  "},{"title":"vector3​","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize#vector3","content":"&lt;/&gt; Serialize.vector3(v: Vector3 ) → Vector "},{"title":"Types","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize##","content":""},{"title":"​","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize#Vector","content":"type Vector = Vector3int16 | Vector3   Serializes a Vector3. Returns either a vector3 or a Vector3int16 if its all integers  "},{"title":"table​","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize#table","content":"&lt;/&gt; Serialize.table(t: {any}) → {any} Serializes a table deeply.  "},{"title":"uuid​","type":1,"pageTitle":"Serialize","url":"/ultimate-build-docs/api/Serialize#uuid","content":"&lt;/&gt; Serialize.uuid() → string Creates a serialized GUID by removing hypens and cuts down the size by half by converting it into a binary string. "},{"title":"Util","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Util","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Util","url":"/ultimate-build-docs/api/Util#functions","content":" "},{"title":"Lerp​","type":1,"pageTitle":"Util","url":"/ultimate-build-docs/api/Util#Lerp","content":"&lt;/&gt; Util.Lerp( startingValue: number, endValue: number, alpha: number ) → number Linear Interpolates between two values. See Linear Interpolation for more information. "},{"title":"Number​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#Number","content":"&lt;/&gt; type Number = string | number Number or string "},{"title":"Functions​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#functions","content":" "},{"title":"number​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#number","content":"&lt;/&gt; Deserialize.number(n: Number) → number Deserializes a number  "},{"title":"color3​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#color3","content":"&lt;/&gt; Deserialize.color3(c: Color) → Color3  Deserializes a Color3 binary string  "},{"title":"vector3​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#vector3","content":"&lt;/&gt; Deserialize.vector3(v: Vector) → Vector3  Deserializes a Vector3  "},{"title":"uuid​","type":1,"pageTitle":"Deserialize","url":"/ultimate-build-docs/api/Deserialize#uuid","content":"&lt;/&gt; Deserialize.uuid(uuid: string) → string Deserializes a UUID "},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/ultimate-build-docs/docs/intro","content":"Getting Started Here are some quick links to get started: BlocksAPI Docs","keywords":""},{"title":"ZoneMonad","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/ZoneMonad","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ZoneMonad","url":"/ultimate-build-docs/api/ZoneMonad#types","content":" "},{"title":"ZoneReducer​","type":1,"pageTitle":"ZoneMonad","url":"/ultimate-build-docs/api/ZoneMonad#ZoneReducer","content":"&lt;/&gt; type ZoneReducer = ( self:Zone, item:any ) → nil | any Defines a reducer for ZoneMonad. "},{"title":"Functions​","type":1,"pageTitle":"ZoneMonad","url":"/ultimate-build-docs/api/ZoneMonad#functions","content":" "},{"title":"wrap​","type":1,"pageTitle":"ZoneMonad","url":"/ultimate-build-docs/api/ZoneMonad#wrap","content":"&lt;/&gt; ZoneMonad.wrap(zone: Zone) → ZoneMonad Wraps a ZonePlus Zone in our monad.  "},{"title":"andThen​","type":1,"pageTitle":"ZoneMonad","url":"/ultimate-build-docs/api/ZoneMonad#andThen","content":"&lt;/&gt; ZoneMonad:andThen( fn: ZoneReducer&lt;any&gt;, ...: any ) → ZoneMonad Chains a ZoneReducer to the zone. These get called in order and if one fails, the chain stops.  "},{"title":"unwrap​","type":1,"pageTitle":"ZoneMonad","url":"/ultimate-build-docs/api/ZoneMonad#unwrap","content":"&lt;/&gt; ZoneMonad:unwrap() → Zone Unwraps our monad and gives back our zone "},{"title":"Attribute Datatypes","type":0,"sectionRef":"#","url":"/ultimate-build-docs/docs/Attributes","content":"Attribute Datatypes There are a huge variety of datatypes that are supported. Each one of these has their own reducer defined for them in ReducerTemplates Number A simple number. local defaultAttributes = { Force = 10 } ClampedNumber ClampedNumbers get automatically clamped between their Min and Max. local defaultAttributes = { Force = { Min = 0, Max = 100, Value = 10 } } Strings Strings get automatically filtered before they can be set by the player. warning Make absolutely sure to use the string reducer for all strings so it gets filtered properly. local defaultAttributes = { Name = &quot;Rusty485&quot; } ","keywords":""},{"title":"Toggle","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Toggle","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#types","content":" "},{"title":"Properties​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#Properties","content":"&lt;/&gt; type Properties = { Color: Color3? , Transparency: number?, Reflectance: number?, Material: Material? } Properties of the attached BasePart "},{"title":"Properties​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#properties","content":" "},{"title":"State​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#State","content":"&lt;/&gt; Toggle.State: boolean Toggle's current state.  "},{"title":"On​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#On","content":"&lt;/&gt; Toggle.On: Properties Part's appearance when toggle is on.  "},{"title":"Off​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#Off","content":"&lt;/&gt; Toggle.Off: Properties Part's appearance when toggle is off. "},{"title":"Functions​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#new","content":"&lt;/&gt; Toggle.new(part: BasePart ) → Toggle Initalizes a new toggle  "},{"title":"Flip​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#Flip","content":"&lt;/&gt; Toggle:Flip() → () Flips the toggle's state.  "},{"title":"Attach​","type":1,"pageTitle":"Toggle","url":"/ultimate-build-docs/api/Toggle#Attach","content":"&lt;/&gt; Toggle:Attach(part: BasePart ) → Toggle Attaches toggle to a new host part. "},{"title":"Mouse","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Mouse","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#properties","content":" "},{"title":"MouseIconEnabled​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#MouseIconEnabled","content":"&lt;/&gt; Mouse.MouseIconEnabled: boolean This is a proxy for UserInputService.MouseIconEnabled  "},{"title":"Icon​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Icon","content":"&lt;/&gt; Mouse.Icon: string This is a proxy for UserInputService.MouseIcon  "},{"title":"X​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#X","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.X: number Mouse's X coordinate  "},{"title":"Y​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Y","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.Y: number Mouse's Y coordinate  "},{"title":"Move​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Move","content":"Event &lt;/&gt; Mouse.Move: Signal Mouse moved event  "},{"title":"Button1Down​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Button1Down","content":"Event &lt;/&gt; Mouse.Button1Down: Signal Player right click down  "},{"title":"Button1Up​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Button1Up","content":"Event &lt;/&gt; Mouse.Button1Up: Signal Player right click up  "},{"title":"Button2Down​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Button2Down","content":"Event &lt;/&gt; Mouse.Button2Down: Signal Player left click down  "},{"title":"Button2Up​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Button2Up","content":"Event &lt;/&gt; Mouse.Button2Up: Signal Player left click up  "},{"title":"WheelForward​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#WheelForward","content":"Event &lt;/&gt; Mouse.WheelForward: Signal Player mouse wheel forward  "},{"title":"WheelBackward​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#WheelBackward","content":"Event &lt;/&gt; Mouse.WheelBackward: Signal Player mouse wheel backward  "},{"title":"Idle​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Idle","content":"Event &lt;/&gt; Mouse.Idle: Signal Player mouse idle  "},{"title":"ViewSizeX​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#ViewSizeX","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.ViewSizeX: number Player viewport size X  "},{"title":"ViewSizeY​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#ViewSizeY","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.ViewSizeY: number Player viewport size X  "},{"title":"TargetFilter​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#TargetFilter","content":"&lt;/&gt; Mouse.TargetFilter: {Instance } | Instance  Player filter for the mouse. Checks descendants too.  "},{"title":"Hit​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Hit","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.Hit: CFrame | nil Hit location on Basepart.  "},{"title":"TargetNormal​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#TargetNormal","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.TargetNormal: Vector3  The surface normal we are hovering on the Target  "},{"title":"TargetSurface​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#TargetSurface","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.TargetSurface: NormalId  The surface we are hovering on the Target  "},{"title":"Target​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Target","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.Target: BasePart  The Basepart we are hovering over.  "},{"title":"Origin​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Origin","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.Origin: Vector3  The origin of the mouse ray.  "},{"title":"UnitRay​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#UnitRay","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.UnitRay: Ray  The mouse ray  "},{"title":"Direction​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#Direction","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.Direction: Vector3  The direction of the mouse ray  "},{"title":"End​","type":1,"pageTitle":"Mouse","url":"/ultimate-build-docs/api/Mouse#End","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Mouse.End: Vector3  The end of the mouse ray "},{"title":"ZoneReducers","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/ZoneReducers","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ZoneReducers","url":"/ultimate-build-docs/api/ZoneReducers#functions","content":" "},{"title":"isPlayer​","type":1,"pageTitle":"ZoneReducers","url":"/ultimate-build-docs/api/ZoneReducers#isPlayer","content":"&lt;/&gt; ZoneReducers.isPlayer( _: ZoneMonad, item: instance ) → nil | Player  Checks if the item is a player.  "},{"title":"andEntered​","type":1,"pageTitle":"ZoneReducers","url":"/ultimate-build-docs/api/ZoneReducers#andEntered","content":"&lt;/&gt; ZoneReducers.andEntered( self: ZoneMonad, item: instance ) → nil | Instance  Checks if the item did enter.  "},{"title":"andExited​","type":1,"pageTitle":"ZoneReducers","url":"/ultimate-build-docs/api/ZoneReducers#andExited","content":"&lt;/&gt; ZoneReducers.andExited( self: ZoneMonad, item: instance ) → nil | Instance  Checks if the item did exit.  "},{"title":"isPart​","type":1,"pageTitle":"ZoneReducers","url":"/ultimate-build-docs/api/ZoneReducers#isPart","content":"&lt;/&gt; ZoneReducers.isPart( _: ZoneMonad, item: instance ) → nil | BasePart  Checks if the item is a BasePart.  "},{"title":"thenRespawn​","type":1,"pageTitle":"ZoneReducers","url":"/ultimate-build-docs/api/ZoneReducers#thenRespawn","content":"&lt;/&gt; ZoneReducers.thenRespawn( _: ZoneMonad, player: Player ) → Player  Respawns the player warning This will error if you pass it something thats not a player. Make sure to use isPlayer before using this.  "},{"title":"thenKill​","type":1,"pageTitle":"ZoneReducers","url":"/ultimate-build-docs/api/ZoneReducers#thenKill","content":"&lt;/&gt; ZoneReducers.thenKill( _: ZoneMonad, player: Player ) → Player  Kills the player warning This will error if you pass it something thats not a player. Make sure to use isPlayer before using this. "},{"title":"Store","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Store","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#types","content":" "},{"title":"Action​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#Action","content":"&lt;/&gt; type Action = { type:string, input:any } Action type for dispatching  "},{"title":"Defaults​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#Defaults","content":"&lt;/&gt; type Defaults = {[string]:any} String dictionary table for the default attributes  "},{"title":"State​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#State","content":"&lt;/&gt; type State = {[string]:any} String dictionary table for the state  "},{"title":"Reducer​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#Reducer","content":"&lt;/&gt; type Reducer = ( state: State, action:Action ) → State A function that takes in state and a action and then &quot;reduces&quot; down the state "},{"title":"Properties​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#properties","content":" "},{"title":"Changed​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#Changed","content":"Event &lt;/&gt; Store.Changed: Signal Fires when the store gets a dispatch and it passes. "},{"title":"Functions​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#new","content":"&lt;/&gt; Store.new( defaults: State, reducer: Reducer, middleware: {Middleware} ) → Store Creates a new store.  "},{"title":"dispatch​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#dispatch","content":"&lt;/&gt; Store:dispatch(action: Action) → () Dispatches a action to the store  "},{"title":"getState​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#getState","content":"&lt;/&gt; Store:getState() → State Gets the current state  "},{"title":"Destroy​","type":1,"pageTitle":"Store","url":"/ultimate-build-docs/api/Store#Destroy","content":"&lt;/&gt; Store:Destroy() → nil Destroys the store, rendering it completely unsuable. "},{"title":"Zones","type":0,"sectionRef":"#","url":"/ultimate-build-docs/api/Zones","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Zones","url":"/ultimate-build-docs/api/Zones#properties","content":" "},{"title":"Reducers​","type":1,"pageTitle":"Zones","url":"/ultimate-build-docs/api/Zones#Reducers","content":"&lt;/&gt; Zones.Reducers: ZoneReducers Reducer functions to be used with ZoneMonad "},{"title":"Functions​","type":1,"pageTitle":"Zones","url":"/ultimate-build-docs/api/Zones#functions","content":" "},{"title":"getZones​","type":1,"pageTitle":"Zones","url":"/ultimate-build-docs/api/Zones#getZones","content":"&lt;/&gt; Zones:getZones() → {[string]: ZoneMonad} Gets a dictionary of all of the zones in the game  "},{"title":"getZone​","type":1,"pageTitle":"Zones","url":"/ultimate-build-docs/api/Zones#getZone","content":"&lt;/&gt; Zones:getZone(Name: string) → ZoneMonad Gets zone from name of the zone.  "},{"title":"addZone​","type":1,"pageTitle":"Zones","url":"/ultimate-build-docs/api/Zones#addZone","content":"&lt;/&gt; Zones:addZone(Container: BasePart | Model ) → ()  info This is used internally. It's not necessary unless you haven't defined your zone in workspace.Zones Adds zone defined from a model's bounding box or a basepart. "},{"title":"Block Modules","type":0,"sectionRef":"#","url":"/ultimate-build-docs/docs/Blocks","content":"","keywords":""},{"title":"Creating a block​","type":1,"pageTitle":"Block Modules","url":"/ultimate-build-docs/docs/Blocks#creating-a-block","content":"You can define a block by creating a module script inside of src/ServerScriptService/Blocks/ warning Make sure you name the module the name of the actual block in the map or else it wont work. local Block = {} Block.defaultAttributes = {} Block.Reducers = {} Block.defaultMetadata = {} function Block.Init(Part: BasePart, Janitor, Attributes, Metadata) local function Constructor() end return Constructor end return Block  "},{"title":"Init​","type":1,"pageTitle":"Block Modules","url":"/ultimate-build-docs/docs/Blocks#init","content":"As you can see, we defined a init function for a block called Block Whenever a user copies a part called Block this init function will get called and pass along that part along with a Janitor. Next, the Constructor function will get called which will set up any events the block needs in order to function. This janitor object is what we use to clean up any events the block may create in its functionality when the block gets deleted or destroyed in order to save out on memory. We call this state the block is in hibernation. "},{"title":"Constructor​","type":1,"pageTitle":"Block Modules","url":"/ultimate-build-docs/docs/Blocks#constructor","content":"When a block is in hibernation and gets parented back to the workspace, we need to wake it up. This is what the constructor function is for, it sets up the block's event connections to our Janitor in order to wake it up. "},{"title":"defaultAttributes​","type":1,"pageTitle":"Block Modules","url":"/ultimate-build-docs/docs/Blocks#defaultattributes","content":"defaultAttributes is a table that holds all of the default attributes of block that the user can program with: local defaultAttributes = { Force = 10; }  We can set a variety of different types of data for attributes. See Attribute Types for more. "},{"title":"defaultMetadata​","type":1,"pageTitle":"Block Modules","url":"/ultimate-build-docs/docs/Blocks#defaultmetadata","content":"defaultMetadata is default metadata for our block. Each time a block that gets copied from our map, they will get the default metadata listed here. See Metadata for details. "},{"title":"Reducers​","type":1,"pageTitle":"Block Modules","url":"/ultimate-build-docs/docs/Blocks#reducers","content":"Reducers are just a dictionary of functions mapped to each of our attributes that get called whenever somebody trys to program this block. This is very important as we want to make sure the data passed in is valid and safe for our block. The basic way a reducer is defined is as follows: tip You can access a variety of different pre-defined reducer functions in ServerScriptService/Modules/ReducerTemplates.lua local Reducers = { Force = function(state:State,action:Action) local value = action.input if typeof(value) ~= 'number' then return Option.None end if value ~= value then return Option.None end return Option.Some(value) end }  warning When we return Option.Some(value), the block's attributes will get updated. However, we wont when we return Option.None. "},{"title":"Metadata​","type":1,"pageTitle":"Block Modules","url":"/ultimate-build-docs/docs/Blocks#metadata","content":"Metadata is a table that holds data that you dont want to expose to the users but want to still have access. One usecase you may stumble across a lot in our code are Toggles. function Block.Init(Part: BasePart, Janitor, Attributes, Metadata) local clickDetector = ClickDetector.new(Part) local toggle = nil if Metadata.Toggle then toggle = Metadata.Toggle:Attach(Part) else toggle = Toggle.new(Part) toggle.State = true toggle.Off.Color = Color3.new() Metadata.Toggle = toggle end local function Enable() toggle:Flip() end local function Constructor() Janitor:Add(ClickDetector.MouseClick:Connect(Enable)) end return Constructor end  When we copy this block from the map, the toggle's metadata by default is {} unless we set the defaultMetadata. We set the toggle into our metadata, this now will get passed along to any copies of this block. "}]