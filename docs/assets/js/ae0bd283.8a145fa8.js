"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3210],{25299:e=>{e.exports=JSON.parse('{"functions":[{"name":"createIdentifer","desc":"Creates an identifier from the string you passed in.\\n:::note\\nThis function will return a promise on the client. This promise will resolve when the identifier has been created on the server.\\n:::","params":[{"name":"id","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"PackedString | Promise"}],"function_type":"static","realm":["Client","Server"],"source":{"line":107,"path":"src/Client/Modules/Identifiers.lua"}},{"name":"fromIdentifier","desc":":::note\\nThis function will return a promise on the client. This promise will resolve when the identifier has been created on the server.\\n:::\\n\\nReturns the original string you passed in.","params":[{"name":"packed","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"UnpackedString | nil | Promise"}],"function_type":"static","realm":["Client","Server"],"source":{"line":144,"path":"src/Client/Modules/Identifiers.lua"}}],"properties":[],"types":[{"name":"PackedString","desc":"Represents a packed string","lua_type":"string","source":{"line":23,"path":"src/Client/Modules/Identifiers.lua"}},{"name":"UnpackedString","desc":"Represents a unpacked string","lua_type":"string","source":{"line":27,"path":"src/Client/Modules/Identifiers.lua"}}],"name":"Identifiers","desc":"This is for representing long strings as very small strings to send through the network.","source":{"line":13,"path":"src/Client/Modules/Identifiers.lua"}}')}}]);