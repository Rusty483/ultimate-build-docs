"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[835],{33404:e=>{e.exports=JSON.parse('{"functions":[{"name":"wrap","desc":"Wraps a ZonePlus Zone in our monad.","params":[{"name":"zone","desc":"","lua_type":"Zone"}],"returns":[{"desc":"","lua_type":"ZoneMonad\\n"}],"function_type":"static","source":{"line":31,"path":"src/ReplicatedStorage/Modules/Zones/Zone.lua"}},{"name":"andThen","desc":"Chains a ZoneReducer to the zone. These get called in order and if one fails, the chain stops.","params":[{"name":"fn","desc":"","lua_type":"ZoneReducer<any>"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"ZoneMonad\\n"}],"function_type":"method","source":{"line":64,"path":"src/ReplicatedStorage/Modules/Zones/Zone.lua"}},{"name":"unwrap","desc":"Unwraps our monad and gives back our zone","params":[],"returns":[{"desc":"","lua_type":"Zone"}],"function_type":"method","source":{"line":75,"path":"src/ReplicatedStorage/Modules/Zones/Zone.lua"}}],"properties":[],"types":[{"name":"ZoneReducer","desc":"Defines a reducer for ZoneMonad.","lua_type":"(self:Zone,item:any) -> nil | any","source":{"line":28,"path":"src/ReplicatedStorage/Modules/Zones/Zone.lua"}}],"name":"ZoneMonad","desc":"Describes a zone in a monadic way","source":{"line":24,"path":"src/ReplicatedStorage/Modules/Zones/Zone.lua"}}')}}]);